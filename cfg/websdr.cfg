
#
# WebSDR server configuration file
# Lines starting with a hash (#) are comments.
# Each line consists of a keyword followed by one or more settings.
# The order of the lines is arbitrary, except that lines configuring
# a band should be together.
#
############################################################################
# first, a few generalities about the server:

# The maximum number of users.
# In most cases, the internet uplink is the limiting factor; count on about
# 100 kbit/s per user, depending on the compression level you choose.
maxusers 50

# On which port should the server listen?
# An obvious choice would be 80, so users don't need to specify it in the URL.
# However, this requires the websdr binary to be setuid root, see install.txt.
# A common alternative choice is 8901.
tcpport 8091

# If (and only if) you are running the WebSDR on a computer that is shared
# with users that you do not trust, uncomment the following line.
# It disables the system administration interface in sysop.html.
#donttrustlocalhost

# If your computer is on a 10.x.x.x or 192.168.x.x network on which there
# are no users that you do not trust, uncomment the following line.
# It enables the system administration interface in sysop.html also for computers
# on these local networks.
dotrustlocalnet

# Loginterval in seconds - 0 for debug to console
logfileinterval 0

# Only allow slow waterfalls when number of listeners exceeds x.
# Useful to save CPU power on slow computers, or network bandwidth
# on slow links.
slowdownusers 10

# Slow down waterfalls to half the normal minimum speed when number
# of listeners exceeds x.
slowdownusers2 20

# Sets the FFTW library's planning effort to x, where x may be:
#  0 for FFTW_ESTIMATE
#  1 for FFTW_MEASURE
#  2 for FFTW_PATIENT
#  3 for FFTW_EXHAUSTIVE
# Higher numbers make the program start up slower but may result in
# reducing the CPU load, because the library tries to optimize the FFT
# calculation. Default is 0.
fftplaneffort 0

# Set the dataformat for the waterfall datastream.
# x=0 gives the old uncompressed, 8 bit per pixel format.
# x=8 uses on average 2.9 bits per pixel.
# x=9 is the default now: compression to between 1.5 and 2.3 bits
#     per pixel with very few artefacts.
waterfallformat 9

# Set the amount of compression for the audiodata.
# x can be from 0 to 3.
# The higher x, the larger the quantisation noise will be.
# Normally, x=0 (which is the default) should be good; but if your
# network bandwidth is really limited, you could try others.
# (I've used x=2 at my home system with hardly any user complaints;
# x=3 was found too noisy.)
audioformat 1

############################################################################

# If you do NOT want your WebSDR to register itself on http://www.websdr.org
# site, uncomment the following line:
# noorgserver

# The following lines contain information that is transmitted to websdr.org:

# What is your system's (public) hostname?
# (Note: give _only_ the hostname here, _not_ the complete URL; so leave out
# the 'http://' and the portnumber.)
# If left commented out, the www.websdr.org page will show the IP address.
hostname heppen.be

# Your system's locator square:
org qth JO21OC

# A short description of your site:
org description ON5HB and ON3MS - Heppen - Belgium

# If you want your logo to appear on the http://www.websdr.org site, do the following:
# - make a 48x48 (non-animated, please!) picture in a usual format, such as GIF, PNG or JPEG;
# - put it in the pub directory of your websdr server;
# - uncomment the following line and put your picture's filename in it:
org logo belgium.png

# please provide your e-mail address; this will NOT appear on http://websdr.org
# but will be used for sending you software updates in the future.
org email bas@heppen.be


#######################################################
# First dongle with upconverter 
#######################################################

band 160~80m

# RTL example ip:port device-number + 11PPM voor upconverter
device !rtlsdr 127.0.0.1:1234 12
# device !rtlsdr 127.0.0.1:1234

# Set the initial frequency to x kHz with mode y (usb/lsb/am/cw/fm).
initial 3630 lsb

# Samplerate in Hz:
samplerate 2048000

# Center frequency in kHz:
centerfreq 2800

progfreq 127800
# Upconverter is 125 MHz.

# A short description of the antenna, for listing on websdr.org:
antenna G5RV or Inverted-L at 70m ASL : Dongle RTL-SDR v3 with 125MHz up-converter

# If needed, you can amplify or attenuate the signals by a number of dB:
gain -18
# gain -25

# Enables a simple noise blanker, where x sets the threshold factor.
# The higher x is, the higher the threshold above which a noise spike
# needs to rise to be blanked; a value on the order of 80 makes sense,
# but experimentation may be needed.
# Due to its simplicity, this noise blanker is probably only useful
# if you have rather strong local noise sources, e.g., an electric
# fence.
# noiseblanker 150

# Allow bandwidth setting of SSB and AM signals to be widened beyond
# the normal 4 and 8 kHz, respectively; useful for better sound quality
# on AM broadcast signals, but puts a higher load on the internet link.
# Also, this is only properly supported for HTML5 audio; there are
# aliasing products audible when using Java.
# Finally, changing the bandwidth while recording also may not work
# correctly (WAV files don't support changing samplerates).
# allowwide


# Set the cut-off frequency to the input high-pass filter to x Hz.
# This filter cuts out the DC offset and possibly other low-frequency
# noise (e.g. mains hum) at the soundcard input.
# This is just a first-order filter, so it is not very steep.
# Setting it to 0 removes the filter entirely.
# Default is 500 Hz.
hpf 300

#######################################################
# Second dongle 2m
#######################################################

band 2m

# RTL example ip:port device-number + 11PPM voor upconverter
device !rtlsdr 127.0.0.1:1235 
# device !rtlsdr 127.0.0.1:1234

# Set the initial frequency to x kHz with mode y (usb/lsb/am/cw/fm).
# initial 145575 fm

# Samplerate in Hz:
samplerate 2048000

# Center frequency in kHz:
centerfreq 145000

# progfreq 127800
# Upconverter is 125 MHz.

# A short description of the antenna, for listing on websdr.org:
antenna X300 at 70m ASL : Dongle RTL-SDR v3 

# If needed, you can amplify or attenuate the signals by a number of dB:
gain -24
# gain -25

# Enables a simple noise blanker, where x sets the threshold factor.
# The higher x is, the higher the threshold above which a noise spike
# needs to rise to be blanked; a value on the order of 80 makes sense,
# but experimentation may be needed.
# Due to its simplicity, this noise blanker is probably only useful
# if you have rather strong local noise sources, e.g., an electric
# fence.
# noiseblanker 150

# Allow bandwidth setting of SSB and AM signals to be widened beyond
# the normal 4 and 8 kHz, respectively; useful for better sound quality
# on AM broadcast signals, but puts a higher load on the internet link.
# Also, this is only properly supported for HTML5 audio; there are
# aliasing products audible when using Java.
# Finally, changing the bandwidth while recording also may not work
# correctly (WAV files don't support changing samplerates).
# allowwide


# Set the cut-off frequency to the input high-pass filter to x Hz.
# This filter cuts out the DC offset and possibly other low-frequency
# noise (e.g. mains hum) at the soundcard input.
# This is just a first-order filter, so it is not very steep.
# Setting it to 0 removes the filter entirely.
# Default is 500 Hz.
hpf 500

############################################################################
#
# That's all, unless you want to configure more bands. In that case, just repeat
# the band section (starting at the 'band' keyword) from the above.
#
# Several more things can be configured; see config.txt for details.
#

